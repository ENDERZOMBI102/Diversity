plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://maven.shedaniel.me/' }
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com/' }
	maven { url 'https://maven.gudenau.net' }
}

dependencies {
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings "net.fabricmc:yarn:$yarn_mappings:v2"
	modImplementation "net.fabricmc:fabric-loader:$loader_version"

	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"

	/* mod dependencies */

	// cloth config
	modApi("me.shedaniel.cloth:cloth-config-fabric:$clothconfig_version") {
		exclude(group: 'net.fabricmc.fabric-api')
	}
	// modmenu
	modImplementation "com.terraformersmc:modmenu:$modmenu_version"

	// more tags
	include modImplementation("net.gudenau.minecraft:MoreTags:$moretags_version")

	/* lib dependencies */
}

processResources {
	inputs.property "mod_version", project.version
	inputs.property 'cc_version', project.clothconfig_version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand([
				"mod_version": project.version,
				'cc_version': project.clothconfig_version,
		])
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release.set(16)
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(16)
	}
	archivesBaseName = project.archives_base_name
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {

	}
}
