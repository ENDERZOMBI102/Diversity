plugins {
	id 'org.quiltmc.loom' version '0.12.+'
	id 'java'
}

allprojects {
	repositories {
		mavenCentral()
		maven { url 'https://jitpack.io' }
		maven { url 'https://maven.gegy.dev' }
		maven { url 'https://maven.shedaniel.me' }
		maven { url 'https://maven.ryanliptak.com' }
		maven { url 'https://repsy.io/mvn/enderzombi102/mc' }
		maven { url 'https://maven.terraformersmc.com/releases' }
		maven { url 'https://maven.quiltmc.org/repository/release' }
		maven { url 'https://maven.quiltmc.org/repository/snapshot' }
	}
}

subprojects {
	apply plugin: 'org.quiltmc.loom'

	loom.shareRemapCaches = true
	loom.runConfigs {
		client {
			runDir = '../run'
		}
		server {
			runDir = '../run'
		}
	}

	dependencies {
		minecraft "com.mojang:minecraft:$minecraft_version"
		mappings loom.layered {
			addLayer( quiltMappings.mappings( "org.quiltmc:quilt-mappings:$minecraft_version+build.$quilt_mappings:v2" ) )
		}
		modImplementation "org.quiltmc:quilt-loader:$loader_version"
		modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:$quilted_fapi_version-$minecraft_version"

		/* mod dependencies */

		// cloth config
		modImplementation( "me.shedaniel.cloth:cloth-config-fabric:$clothconfig_version" ) {
			transitive false
		}

		modCompileOnlyApi( "com.terraformersmc:modmenu:$modmenu_version" ) {
			transitive false
		}

		modImplementation "com.enderzombi102.EnderLib:minecraft:$enderlib_version"

		/* lib dependencies */

		implementation "org.jetbrains:annotations:$annotations_version"

		if ( project.name != 'Core' ) {
			compileOnly( project( path: ':Core', configuration: 'namedElements' ) )
		}
	}

	processResources {
		inputs.property 'version', version
		inputs.property 'group', 'com.enderzombi102.diversity'
		inputs.property 'loader_version', loader_version
		inputs.property 'minecraft_version', minecraft_version
		inputs.property 'cc_version', clothconfig_version
		filteringCharset 'UTF-8'

		filesMatching( 'quilt.mod.json' ) {
			expand( [
				'version'          : version,
				'group'            : 'com.enderzombi102.diversity',
				'loader_version'   : loader_version,
				'minecraft_version': minecraft_version,
				'cc_version'       : clothconfig_version,
			] )
		}
	}

	tasks.withType( JavaCompile ).configureEach {
		it.options.encoding = 'UTF-8'
		it.options.release.set( 17 )
	}

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of( 17 )
		}
		withSourcesJar()
	}

	jar {
		from( 'LICENSE' ) {
			rename {
				"${it}_$archivesBaseName"
			}
		}
	}
}

loom.shareRemapCaches = true
loom.runConfigs {
	client {
		ideConfigGenerated = true
	}
	server {
		ideConfigGenerated = true
	}
}

dependencies {
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings loom.layered {
		addLayer quiltMappings.mappings( "org.quiltmc:quilt-mappings:$minecraft_version+build.$quilt_mappings:v2" )
	}
	modImplementation "org.quiltmc:quilt-loader:$loader_version"
	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:$quilted_fapi_version-$minecraft_version"

	modImplementation( "com.terraformersmc:modmenu:$modmenu_version" ) {
		transitive false
	}

	implementation include( project( path: ':Core', configuration: 'namedElements' ) )
	implementation include( project( path: ':Flora', configuration: 'namedElements' ) )

	// FROM CORE
	implementation include( 'blue.endless:jankson:1.2.1' )
	modImplementation include( "dev.lambdaurora:spruceui:$spruceui_version" )
	modImplementation( "me.shedaniel.cloth:cloth-config-fabric:$clothconfig_version" ) {
		transitive false
	}
	modImplementation "com.enderzombi102.EnderLib:minecraft:$enderlib_version"
	implementation "org.jetbrains:annotations:$annotations_version"
}

processResources {
	inputs.property 'version', version
	inputs.property 'group', 'com.enderzombi102'
	filteringCharset 'UTF-8'

	filesMatching('quilt.mod.json') {
		expand version: version, group: 'com.enderzombi102'
	}
}
